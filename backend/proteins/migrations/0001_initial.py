# Generated by Django 5.2.3 on 2025-09-21 22:34

import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import proteins.util.helpers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('references', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organism',
            fields=[
                ('id', models.PositiveIntegerField(help_text='NCBI Taxonomy ID', primary_key=True, serialize=False, verbose_name='Taxonomy ID')),
                ('scientific_name', models.CharField(blank=True, max_length=128)),
                ('division', models.CharField(blank=True, max_length=128)),
                ('common_name', models.CharField(blank=True, max_length=128)),
                ('species', models.CharField(blank=True, max_length=128)),
                ('genus', models.CharField(blank=True, max_length=128)),
                ('rank', models.CharField(blank=True, max_length=128)),
            ],
            options={
                'verbose_name': 'Organism',
                'ordering': ['scientific_name'],
            },
        ),
        migrations.CreateModel(
            name='GeneFamily',
            fields=[
                ('id', models.CharField(default=proteins.util.helpers.shortuuid, editable=False, max_length=22, primary_key=True, serialize=False)),
                ('gene_family', models.SlugField(blank=True, max_length=200, null=True, unique=True)),
                ('parent_organism', models.ForeignKey(blank=True, help_text='Organism from which the gene family was derived', null=True, on_delete=django.db.models.deletion.CASCADE, to='proteins.organism', verbose_name='Parent organism')),
            ],
        ),
        migrations.CreateModel(
            name='ProteinReferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.ForeignKey(db_column='doi', on_delete=django.db.models.deletion.CASCADE, to='references.reference', to_field='doi')),
            ],
        ),
        migrations.CreateModel(
            name='ProteinTF',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('pending', 'pending'), ('approved', 'approved'), ('hidden', 'hidden')], default='pending', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('id', models.CharField(default=proteins.util.helpers.shortuuid, editable=False, max_length=22, primary_key=True, serialize=False)),
                ('gene', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True)),
                ('aliases', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, null=True, size=None)),
                ('gene_type', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, null=True, size=None)),
                ('dna_binding_domain', models.TextField(blank=True, null=True)),
                ('signaling_pathway', models.TextField(blank=True, null=True)),
                ('validation_grade', models.TextField(blank=True, null=True)),
                ('prediction_method', models.TextField(blank=True, null=True)),
                ('microscopy_result', models.JSONField(blank=True, default=dict, null=True)),
                ('motif_enrichment', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('motif_q_score', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('existing_images', models.TextField(blank=True, null=True)),
                ('existing_images_link', models.TextField(blank=True, null=True)),
                ('existing_fusion', models.TextField(blank=True, null=True)),
                ('cloned_fusion', models.TextField(blank=True, null=True)),
                ('imaging_results', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('articles', models.TextField(blank=True, null=True)),
                ('ENSEMBL', models.TextField(blank=True, null=True)),
                ('UNIPROT', models.TextField(blank=True, null=True)),
                ('UNIPROT_aliases', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, null=True, size=None)),
                ('PDB', models.TextField(blank=True, null=True)),
                ('micro_url', models.TextField(blank=True, null=True)),
                ('AF3', models.TextField(blank=True, null=True)),
                ('proteomics_url', models.TextField(blank=True, null=True)),
                ('rna_url', models.TextField(blank=True, null=True)),
                ('jaspar', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, null=True, size=None)),
                ('protein_sequence', models.TextField(blank=True, null=True)),
                ('molecular_weight', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('cofactor', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None)),
                ('oligomerization', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_author', to=settings.AUTH_USER_MODEL)),
                ('gene_family', models.ForeignKey(blank=True, help_text='Gene family to which the gene belongs', null=True, on_delete=django.db.models.deletion.CASCADE, to='proteins.genefamily', to_field='gene_family', verbose_name='Gene family')),
                ('parent_organism', models.ForeignKey(blank=True, help_text='Parent organism of the gene', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proteinTF', to='proteins.organism', verbose_name='Parent organism')),
                ('primary_reference', models.ForeignKey(blank=True, help_text='Preferably the publication that introduced the protein', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primary_proteins', to='references.reference', verbose_name='Primary Reference')),
                ('references', models.ManyToManyField(blank=True, null=True, through='proteins.ProteinReferences', to='references.reference')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['gene'],
            },
        ),
        migrations.CreateModel(
            name='ProteinRepeats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motif_enrichment', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('motif_q_score', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('protein', models.ForeignKey(db_column='gene', on_delete=django.db.models.deletion.CASCADE, to='proteins.proteintf', to_field='gene')),
            ],
        ),
        migrations.AddField(
            model_name='proteinreferences',
            name='protein',
            field=models.ForeignKey(db_column='gene', on_delete=django.db.models.deletion.CASCADE, to='proteins.proteintf', to_field='gene'),
        ),
        migrations.CreateModel(
            name='Excerpt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('approved', 'approved'), ('flagged', 'flagged'), ('rejected', 'rejected')], default='approved', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('content', models.TextField(help_text='Brief excerpt describing this protein', max_length=1200)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_author', to=settings.AUTH_USER_MODEL)),
                ('reference', models.ForeignKey(help_text='Source of this excerpt', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='excerpts', to='references.reference')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modifier', to=settings.AUTH_USER_MODEL)),
                ('proteins', models.ManyToManyField(blank=True, related_name='excerpts', to='proteins.proteintf')),
            ],
            options={
                'ordering': ['reference__year', 'created'],
            },
        ),
        migrations.CreateModel(
            name='Repeat',
            fields=[
                ('id', models.CharField(default=proteins.util.helpers.shortuuid, editable=False, max_length=22, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('aliases', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), blank=True, null=True, size=None)),
                ('motif', models.TextField(blank=True, null=True)),
                ('dfam_id', models.CharField(blank=True, max_length=100, null=True)),
                ('references', models.TextField(blank=True, null=True)),
                ('parental_organism', models.ForeignKey(blank=True, help_text='Organism from which the protein was engineered', null=True, on_delete=django.db.models.deletion.SET_NULL, to='proteins.organism', verbose_name='Parental organism')),
            ],
        ),
        migrations.CreateModel(
            name='Proteomics',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.CharField(default=proteins.util.helpers.shortuuid, editable=False, max_length=22, primary_key=True, serialize=False)),
                ('cell_type', models.TextField(blank=True, null=True)),
                ('cell_line_name', models.TextField(blank=True, null=True)),
                ('method', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_generated', models.DateField(blank=True, null=True)),
                ('x_label', models.TextField(blank=True, null=True)),
                ('y_label', models.TextField(blank=True, null=True)),
                ('significance', models.JSONField(blank=True, default=dict, null=True)),
                ('log2vals', models.JSONField(blank=True, default=dict, null=True)),
                ('thresholds', django.contrib.postgres.fields.ArrayField(base_field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True), blank=True, null=True, size=None)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proteomics_author', to=settings.AUTH_USER_MODEL)),
                ('parent_organism', models.ForeignKey(blank=True, help_text='Parent organism of the gene', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proteomics', to='proteins.organism', verbose_name='Parent organism')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proteomics_modifier', to=settings.AUTH_USER_MODEL)),
                ('target', models.ForeignKey(blank=True, help_text='Repeat target for this experiment', null=True, on_delete=django.db.models.deletion.CASCADE, to='proteins.repeat')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='proteintf',
            name='repeats',
            field=models.ManyToManyField(blank=True, null=True, through='proteins.ProteinRepeats', to='proteins.repeat'),
        ),
        migrations.AddField(
            model_name='proteinrepeats',
            name='repeat',
            field=models.ForeignKey(db_column='name', on_delete=django.db.models.deletion.CASCADE, to='proteins.repeat', to_field='name'),
        ),
        migrations.AlterUniqueTogether(
            name='proteinreferences',
            unique_together={('protein', 'reference')},
        ),
        migrations.CreateModel(
            name='ProteinCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=512)),
                ('managers', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), blank=True, default=list, size=None)),
                ('private', models.BooleanField(default=False, help_text='Private collections can not be seen by or shared with other users', verbose_name='Private Collection')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('proteins', models.ManyToManyField(related_name='collection_memberships', to='proteins.proteintf')),
            ],
            options={
                'unique_together': {('owner', 'name')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='proteinrepeats',
            unique_together={('protein', 'repeat')},
        ),
    ]
